%{

/*
 * mql_get_query.lxx
 *
 * MQL lexer for splitting query-stream into queries
 *
 * Splits on the keyword 'GO', obeying the same rules about strings 
 * as mql.lxx.  Also eats up comments, both C and C++ style-comments.
 *
 * Ulrik Petersen
 * Created: 5/1-2001 (May 1st, 2001)
 * Last update: 1/13-2006
 *
 */
/************************************************************************
 *
 *   Emdros - the database engine for analyzed or annotated text
 *   Copyright (C) 2001-2006  Ulrik Petersen
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License as
 *   published by the Free Software Foundation, license version 2.  
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *   General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 *   02111-1307 USA
 *
 *
 *   Special exception
 *   =================
 * 
 *   In addition, as a special exception, Ulrik Petersen, the
 *   copyright holder of Emdros, gives permission to link Emdros, in
 *   whole or in part, with the libraries which are normally
 *   distributed with:
 *   
 *   a) Sun's Java platform,
 *   b) Python, 
 *   c) Jython,
 *   d) Ruby, and/or 
 *   e) Perl 
 *   f) PostgreSQL
 *   g) OpenSSL
 *
 *   (or with modified versions of these), and to distribute linked
 *   combinations including both Emdros, in whole or in part, and one
 *   or more of the libraries normally distributed with (a)-(g) above.
 *
 *   Please note: This gives you special rights concerning the
 *   libraries which normally accompany the above pieces of software.
 *   It gives you no special rights concerning software that you write
 *   yourself.  You must obey the GNU General Public License in all
 *   respects for all of the code used other than the libraries
 *   normally distributed with (a)-(g) above.
 *
 *   If you modify this file, you may extend this exception to your
 *   version of the file, but you are not obligated to do so. If you
 *   do not wish to do so, delete this exception statement from your
 *   version.
 *
 *
 *   Other licensing forms
 *   =====================
 *
 *   If you wish to negotiate commercial licensing, please contact
 *   Ulrik Petersen at ulrikp[at]users.sourceforge.net.
 *
 *   Licensing can also be negotiated if your organization is an
 *   educational, non-profit, charity, missionary or similar
 *   organization.
 *
 *
 *   Website
 *   =======
 *
 *   Emdros has a website here:
 *
 *   http://emdros.org
 *
 *
 *
 **************************************************************************/



#include <string>
#include <sstream>



%}

%option c++
%option prefix="zz"
%option yylineno
%option case-insensitive
%option noyywrap
%option 8bit

%x STRINGDQ
%x STRINGSQ
%x COMMENT_SLASH_STAR
%x COMMENT_SLASH_SLASH

%%

quit                        {
                              yylval->pBigstring->addsz(yytext);
	                      yylval->pBigstring->addsz(" GO");
			      return 1;
                            } 
go                          {
                              yylval->pBigstring->addsz(yytext);
			      return 1;
                            }
[a-z_][a-z0-9_]*            { yylval->pBigstring->addsz(yytext); }
"/*"                        { BEGIN(COMMENT_SLASH_STAR);  /* eat up */ }
<COMMENT_SLASH_STAR>[^*\r\n]*       ; /* eat up */
<COMMENT_SLASH_STAR>"*"+[^*/\r\n]*  ; /* eat up */
<COMMENT_SLASH_STAR>\r\n            { yylval->pBigstring->addsz("\r\n"); }
<COMMENT_SLASH_STAR>\n            { yylval->pBigstring->addChar('\n'); }
<COMMENT_SLASH_STAR>"*"+"/"       { BEGIN(INITIAL); 
                                    yylval->pBigstring->addChar(' '); }
"//"                        { BEGIN(COMMENT_SLASH_SLASH); /* eat up */ }
<COMMENT_SLASH_SLASH>.      ; /* eat up */
<COMMENT_SLASH_SLASH>\n     { BEGIN(INITIAL); 
                              yylval->pBigstring->addsz(yytext); }
\"                          { BEGIN(STRINGDQ);  
                              yylval->pBigstring->addChar('\"');
                            }
<STRINGDQ>\"                { BEGIN(INITIAL); 
                              yylval->pBigstring->addChar('\"');
                            }
<STRINGDQ>\\[ntvbarf\\'\"\?]  { yylval->pBigstring->addsz(yytext); }
<STRINGDQ>\\[0-3][0-7][0-7] { yylval->pBigstring->addsz(yytext); }
<STRINGDQ>\\x[A-Fa-f0-9][A-Fa-f0-9]    { yylval->pBigstring->addsz(yytext); }
<STRINGDQ>.                 { yylval->pBigstring->addChar(*yytext); }
<STRINGDQ>\n                { yylval->pBigstring->addsz(yytext); }
'                           { BEGIN(STRINGSQ); 
                              yylval->pBigstring->addChar('\'');
                            }
<STRINGSQ>'                 { BEGIN(INITIAL); 
                              yylval->pBigstring->addChar('\'');
                            }
<STRINGSQ>.                 { yylval->pBigstring->addChar(*yytext); }
<STRINGSQ>\n                { yylval->pBigstring->addsz(yytext); }
\t                          { yylval->pBigstring->addChar(' '); }
" "                         { yylval->pBigstring->addChar(' '); }
.                           { yylval->pBigstring->addsz(yytext); }
\n                          { yylval->pBigstring->addsz(yytext); }

%%

